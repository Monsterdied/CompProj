import ioPlus;

ComplexArrayAccess {

    .method public func(a.i32).i32 {

        ret.i32 $1.a.i32;

    }

    .method public static main(args.array.String).V {

        d.ComplexArrayAccess :=.ComplexArrayAccess new(ComplexArrayAccess).ComplexArrayAccess;
        invokespecial(d.ComplexArrayAccess, "<init>").V;

        a.array.i32 :=.array.i32 new(array, 5.i32).array.i32;

        a.array.i32 :=.array.i32 new(array, 5.i32).array.i32;

        a.array.i32 :=.array.i32 new(array, 5.i32).array.i32;

        a[0.i32].i32 :=.i32 1.i32;

        a[1.i32].i32 :=.i32 2.i32;

        t5.i32 :=.i32 a[1.i32].i32;
        t6.i32 :=.i32 a[0.i32].i32;
        i.i32 :=.i32 t5.i32 +.i32 t6.i32;

        t8.i32 :=.i32 a[1.i32].i32;
        t9.i32 :=.i32 a[0.i32].i32;
        i.i32 :=.i32 t8.i32 +.i32 t9.i32;

        t11.i32 :=.i32 a[1.i32].i32;
        t12.i32 :=.i32 a[0.i32].i32;
        i.i32 :=.i32 t11.i32 +.i32 t12.i32;

        ret.V;

    }

    .construct ComplexArrayAccess().V {
        invokespecial(this, "<init>").V;
    }
}