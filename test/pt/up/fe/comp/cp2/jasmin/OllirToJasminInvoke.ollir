import io;

Arithmetic_and{

   .construct Arithmetic_and().V {
       invokespecial(this, "<init>").V;
   }

   .method public static main(args.array.String).V {
      tmp0.Arithmetic_and :=.Arithmetic_and new(Arithmetic_and).Arithmetic_and;
      invokespecial(tmp0.Arithmetic_and, "<init>").V;
      c.Arithmetic_and :=.Arithmetic_and tmp0.Arithmetic_and;
      if(1.bool) goto true_0;
      tmp1.bool :=.bool 0.bool;
      goto end_0;
      true_0:
      tmp2.bool :=.bool invokevirtual(c.Arithmetic_and, "p", 1.i32).bool;
      tmp1.bool :=.bool tmp2.bool;
      end_0:
      a.bool :=.bool tmp1.bool;
      if(1.bool) goto true_1;
      tmp1.bool :=.bool 0.bool;
      goto end_1;
      true_1:
      tmp2.bool :=.bool invokevirtual(c.Arithmetic_and, "p", 1.i32).bool;
      tmp1.bool :=.bool tmp2.bool;
      end_1:
      a.bool :=.bool tmp1.bool;
      if(1.bool) goto true_2;
      tmp1.bool :=.bool 0.bool;
      goto end_2;
      true_2:
      tmp2.bool :=.bool invokevirtual(c.Arithmetic_and, "p", 1.i32).bool;
      tmp1.bool :=.bool tmp2.bool;
      end_2:
      a.bool :=.bool tmp1.bool;
      if(1.bool) goto true_3;
      tmp1.bool :=.bool 0.bool;
      goto end_3;
      true_3:
      tmp2.bool :=.bool invokevirtual(c.Arithmetic_and, "p", 1.i32).bool;
      tmp1.bool :=.bool tmp2.bool;
      end_3:
      a.bool :=.bool tmp1.bool;
      if(1.bool) goto true_4;
      tmp1.bool :=.bool 0.bool;
      goto end_4;
      true_4:
      tmp2.bool :=.bool invokevirtual(c.Arithmetic_and, "p", 1.i32).bool;
      tmp1.bool :=.bool tmp2.bool;
      end_4:
      a.bool :=.bool tmp1.bool;
      ret.V ;
   }

   .method p(value.i32).bool {
      invokestatic(io, "print", value.i32).V;
      ret.bool 1.bool;
   }
}